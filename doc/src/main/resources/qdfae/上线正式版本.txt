


兑付功能升级




验证环境和线上环境一样


Maven和Gradle构建

RELEASE版本的jar包每次升级都需要进行版本+1

需要重新打包的服务
listingservercilent
queryserverclient


第一步：发布client
1、首先是在client中build.gradle构建文件中对RELEASE版本的jar包进行版本+1

2、确保nexus.cfaoe.com指向正式环境的nexus服务器172.16.17.18
可以通过cmd进行ping正式环境的nexus服务器IP地址172.16.17.18
如果ping通，则继续下一步

3、使用cmd进入到client所在的项目根目录，也就是build.gradle构建文件所在的目录
执行Gradle命令：gradle upload -P uploadRelease，打包上传RELEASE版本的jar包

可以参考huajin-springcloud-config/README.md


第二步：更新huajin-dependencies父项目
1、首先是进入到huajin-dependencies项目下的pom.release.xml配置文件
修改其中的huajin-dependencies父项目项目的版本号

2、其次是更新发布client的版本号

3、修改完后就是进入到huajin-dependencies父项目的根目录，也就是pom.xml配置文件所在
的目录，使用mvn -version检测是否安装好Maven

4、最后执行Maven发布RELEASE版本的jar包的命令：mvn -f pom.release.xml deploy


第三步：修改依赖huajin-dependencies项目的jar包版本号
1、在本次功能升级的服务中如果项目依赖了huajin-dependencies项目的jar包，需要去增加版本号+1

2、gradle更新项目





数据库

sql更新数据
sql执行顺序
1、首先是执行D:\software\Git\hj_dbversion\hj_dbversion\src\resource\sql\qdfae\20180104兑付优化下的
/hj_dbversion/src/resource/sql/qdfae/20180104兑付优化/up_bizexchange_ddl.sql

数据定义语言
增加字段和重新创建视图

2、其次是执行D:\software\Git\hj_dbversion\hj_dbversion\src\resource\sql\qdfae\20180104兑付优化下的
两个存储过程和一个DML语句

更新项目兑付登记状态



部署醒目

1、上验证环境之前需要将master分支合并到本次的开发分支上

2、然后部署对应的项目到验证环境的服务器上



 gradle强制刷新依赖
 gradle build --refresh-dependencies























修改build.gradle
imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
    mavenBom 'com.huajin.springcloud:huajin-dependencies:0.0.13-RELEASE'
    //mavenBom 'com.huajin.springcloud:huajin-dependencies:0.0.1-SNAPSHOT'
}








更新sql

更新待发布，已发布
认购中，认购结束









